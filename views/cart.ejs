<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        * {
            font-family: 'Poppins', sans-serif !important;
        }

        body {
            height: 100vh;
            background-color: #000;
            display: flex;
            flex-direction: column;
            font-family: sans-serif;
            font-size: 0.8rem;
            font-weight: bold;
        }

        .title {
            margin-bottom: 5vh;
        }

        .title h4 {
            font-size: 2vh;
        }

        .card {
            margin: auto;
            width: 80%;
            box-shadow: 0 2px 5px #f2f2f2;
            border-radius: 1rem;
        }

        @media(max-width:767px) {
            .card {
                margin: 3vh auto;
            }
        }

        .cart {
            background-color: #fff;
            padding: 4vh 5vh;
            border-bottom-left-radius: 1rem;
            border-top-left-radius: 1rem;
        }

        @media(max-width:767px) {
            .cart {
                padding: 4vh;
                border-bottom-left-radius: unset;
                border-top-right-radius: 1rem;
            }
        }

        .summary {
            background-color: #ddd;
            border-top-right-radius: 1rem;
            border-bottom-right-radius: 1rem;
            padding: 4vh;
            color: rgb(65, 65, 65);
        }

        @media(max-width:767px) {
            body {
                padding: 10px;
            }

            .summary {
                border-top-right-radius: unset;
                border-bottom-left-radius: 1rem;
            }
        }

        .summary .col-2 {
            padding: 0;
        }

        .summary .col-10 {
            padding: 0;
        }

        .row {
            margin: 0;
        }

        .title b {
            font-size: 1.5rem;
        }

        .main {
            margin: 0;
            padding: 2vh 0;
            width: 100%;
        }

        .col-2,
        .col {
            padding: 0 1vh;
        }

        a {
            padding: 0 1vh;
        }

        .close {
            margin-left: auto;
            font-size: 0.7rem;
        }

        img {
            width: 3.5rem;
        }

        .back-to-shop {
            margin-top: 4.5rem;
        }

        h5 {
            margin-top: 4vh;
        }

        hr {
            margin-top: 1.25rem;
        }

        form {
            padding: 2vh 0;
        }

        select {
            border: 1px solid rgba(0, 0, 0, 0.137);
            padding: 1.5vh 1vh;
            margin-bottom: 4vh;
            outline: none;
            width: 100%;
            background-color: rgb(247, 247, 247);
        }

        input {
            border: 1px solid rgba(0, 0, 0, 0.137);
            padding: 1vh;
            margin-bottom: 4vh;
            outline: none;
            width: 100%;
            background-color: rgb(247, 247, 247);
        }

        input:focus::-webkit-input-placeholder {
            color: transparent;
        }

        .btn {
            width: 100%;
            font-size: 1rem;
            margin-top: 4vh;
            padding: 1vh;
        }

        .btn:focus {
            box-shadow: none;
            outline: none;
            box-shadow: none;
            color: white;
            -webkit-box-shadow: none;
            transition: none;
        }

        .btn:hover {
            color: white;
        }

        a {
            color: black;
        }

        a:hover {
            color: black;
            text-decoration: none;
        }

        #code {
            background-image: linear-gradient(to left, rgba(255, 255, 255, 0.253), rgba(255, 255, 255, 0.185)), url("https://img.icons8.com/small/16/000000/long-arrow-right.png");
            background-repeat: no-repeat;
            background-position-x: 95%;
            background-position-y: center;
        }
    </style>
</head>

<body>
    <div class="card">
        <div class="row">
            <div class="col-md-8 cart">
                <div class="title">
                    <div class="row">
                        <div class="col">
                            <h4><b>Shopping Cart</b></h4>
                        </div>
                        <div class="col align-self-center text-right text-muted" id="cartItemCount">Loading...</div>
                    </div>
                </div>

                <!-- Cart Items Section -->
                <div id="cartItemsContainer"></div>

                <div class="back-to-shop"><a href="/">&leftarrow; <span class="text-muted">Back to shop</span></a></div>
            </div>

            <!-- Summary Section -->
            <div class="col-md-4 summary">
                <div>
                    <h5><b>Summary</b></h5>
                </div>
                <hr>
                <div class="row">
                    <div class="col" style="padding-left:0;">ITEMS <span id="summaryItemCount">0</span></div>
                    <div class="col text-right">&#8377; <span id="summaryTotalPrice">0.00</span></div>
                </div>

                <!-- Add the rest of your summary content here -->
                <a href="/confirm">
                <button class="btn btn-dark">CHECKOUT</button>
                </a>
            </div>
        </div>
    </div>


</body>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', async function () {
    try {
        // Fetch user profile
        const response = await axios.get('/getprofile');
        const userProfile = response.data.userProfile;

        // Update cart items count in the title
        document.getElementById('cartItemCount').textContent = userProfile.cart.length;

        // Render cart items
        const cartItemsContainer = document.getElementById('cartItemsContainer');
        cartItemsContainer.innerHTML = ''; // Clear existing content

        userProfile.cart.forEach(async cartItem => {
            await axios.get(`/api/products/${cartItem.itemId}`)
                .then(response => response.data)
                .then(productDetails => {
                    const cartItemElement = document.createElement('div');
                    cartItemElement.className = `row border-top border-bottom main align-items-center card_${cartItem.itemId}`;

                    cartItemElement.innerHTML = `
                        <div class="col-2"><img class="img-fluid" src="${productDetails.imageLink[0]}" alt="${productDetails.name}"></div>
                        <div class="col">
                            <div class="row text-muted">${productDetails.category}</div>
                            <div class="row">${productDetails.name}</div>
                        </div>
                        <div class="col">
                            <a href="#" class="decrease${cartItem.itemId}">-</a>
                            <a href="#" class="border itemQuantity${cartItem.itemId}">
                                ${cartItem.quantity}
                            </a>
                            <a href="#" class="increase${cartItem.itemId}">+</a>
                        </div>
                        <div class="col single_item_total${cartItem.itemId}">&#8377; ${(productDetails.offeredPrice * cartItem.quantity)}</div>
                        <button class="deleteButton${cartItem.itemId}">Delete</button>
                    `;
                    cartItemsContainer.append(cartItemElement);

                    document.querySelector(`.decrease${cartItem.itemId}`).addEventListener('click', async () => {
                        await axios.post('/decreaseItem', { itemId: cartItem.itemId })
                        .then(response => {
                            quantity = response.data.newQuantity;
                            if (quantity === -1){
                                document.querySelector(`.card_${cartItem.itemId}`).innerHTML = "";
                            } else {
                                document.querySelector(`.itemQuantity${cartItem.itemId}`).textContent = quantity;
                                document.querySelector(`.single_item_total${cartItem.itemId}`).textContent = response.data.newQuantity*productDetails.offeredPrice;
                            }
                        })
                        .catch(err => alert("error " + err))
                    })
                    document.querySelector(`.increase${cartItem.itemId}`).addEventListener('click', async () => {
                        await axios.post('/increaseItem', { itemId: cartItem.itemId })
                        .then(response => {
                            document.querySelector(`.itemQuantity${cartItem.itemId}`).textContent = response.data.newQuantity;
                            document.querySelector(`.single_item_total${cartItem.itemId}`).textContent = response.data.newQuantity*productDetails.offeredPrice;
                        })
                        .catch(err => alert("error " + err))
                    })
                    document.querySelector(`.deleteButton${cartItem.itemId}`).addEventListener('click', async () => {
                        await axios.post('/removeItem', { itemId: cartItem.itemId })
                        .then(response => {
                            quantity = response.data.newQuantity;
                            if (quantity === -1){
                                document.querySelector(`.card_${cartItem.itemId}`).innerHTML = "";
                            }
                        })
                        .catch(err => alert("error " + err))
                    })
                })
                .catch(err => console.log("an error occurred fetching the items " + err))

        });

        // Update summary information
        updateSummary(userProfile.cart);
    } catch (error) {
        console.log("Error fetching profile: ", error);
    }
});


function calculateCartItemTotal(cartItem) {
    // Assuming each cart item has a field named 'price'
    return cartItem.price * cartItem.quantity;
}

function updateSummary(cartItems) {
    // Calculate total items and total price
    const totalItems = cartItems.reduce((total, item) => total + item.quantity, 0);
    const totalPrice = cartItems.reduce((total, item) => total + calculateCartItemTotal(item), 0);

    // Update summary information in the HTML
    document.getElementById('summaryItemCount').textContent = totalItems;
    document.getElementById('summaryTotalPrice').textContent = totalPrice.toFixed(2);
}
</script>
</html>