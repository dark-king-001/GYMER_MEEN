<!doctype html>
<html>
   <head>
      <meta charset='utf-8'>
      <meta name='viewport' content='width=device-width, initial-scale=1'>
      <title>Order confirmation Page</title>
      <script src="https://code.iconify.design/iconify-icon/1.0.7/iconify-icon.min.js"></script>
      <link href='https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css' rel='stylesheet'>
      <link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css' rel='stylesheet'>
      <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Outfit:wght@200;400;500&display=swap">
      <style>@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');
         * {
         padding: 0;
         margin: 0;
         box-sizing: border-box;
         font-family: 'Outfit', sans-serif;
         }
         body {
            overflow-y:scroll;
            width: 100%;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
         background-color: #000;
         }

         .main{
            height: max-content;
            width: 80%;
            padding: 4vh;
            display: grid;
            background-color: #fff;
            border-radius: 2vh;
            grid-template-columns: 1fr 1fr;
            grid-column-gap: 3vh;
         }
         #order-heading {
         background-color: #edf4f7;
         position: relative;
         border-top-left-radius: 25px;
         border-top-right-radius: 25px;
         max-width: 800px;
         padding-top: 20px;
         margin: 30px auto 0px
         }
         #order-heading .text-uppercase {
         font-size: 0.9rem;
         color: #777;
         font-weight: 600
         }
         #order-heading .h4 {
         font-weight: 600
         }
         #order-heading .h4+div p {
         font-size: 0.8rem;
         color: #777
         }
         .close {
         padding: 10px 15px;
         background-color: #777;
         border-radius: 50%;
         position: absolute;
         right: -15px;
         display: none;
         top: -20px
         }

         

         .Shipping_Address p{
            font-size: 2rem;
         }

         .wrapper {
         border: 2px solid #000;
         border-radius: 2vh;
         padding: 3vh;
         display: flex;
         flex-direction: column;
         max-width: 100%;
         height: 100%;
         /* margin: 0px auto 40px; */
         }

         .wrapper .table{
            margin-top: 2vh;
            border-radius: 2vh;
         }
         .table th {
         border-top: none
         }
         .table thead tr.text-uppercase th {
         font-size: 0.8rem;
         padding-left: 0px;
         padding-right: 0px
         }
         .wrapper tbody{
            overflow-y: scroll;
         }
         .table tbody tr th,
         .table tbody tr td {
         font-size:2.5vh;
         padding: 2vh;
         border-bottom: none;
         font-weight: 500;
         text-transform: capitalize;
         }
         .table-responsive {
         /* height: 100px; */
         padding: 3vh;
         border-radius: 2vh;
         }

         .wrapper .discount-field{
            width: 100%;
            display: flex;
            justify-content: space-between;
         }

         .discount-field .discount-input{
            width: 90%;
         }


         .list div b {
         font-size: 0.8rem
         }
         .list .order-item {
         font-weight: 600;
         color: #6db3ec
         }
         .list:hover {
         background-color: #f4f4f4;
         cursor: pointer;
         border-radius: 5px
         }
         button.btn {
         font-size: 0.9rem;
         }

         .Shipping_Address{
            display: flex;
            
         }

         .Shipping_Address .labels{
            display: flex;
            margin: 1vh;
            justify-content: space-between;
            text-transform: capitalize;
         }

         .labels label{
            width: 90%;
         }

         .labels input{
            width: 100%;
            border: none;
            text-transform: capitalize;
            border-bottom: 1px solid #999;
            padding-left: 2vw;
         }


         .price {
         color: #5cb99a;
         font-weight: 700
         }
         p.text-justify {
         font-size: 0.9rem;
         margin: 0
         }
         .row {
         margin: 0px
         }
         .subscriptions {
         border: 1px solid #ddd;
         border-left: 5px solid #ffa500;
         padding: 10px
         }
         .subscriptions div {
         font-size: 0.9rem
         }
         @media (max-width: 768px) {
   .main {
      height: 100%;
      width: 90%;
      padding: 3vh;
      grid-template-columns: 1fr; /* Adjust the grid to a single column layout */
   }

   .left-side {
      font-size: 2vh;
      margin-top: 0vh;
      width: 100%; /* Occupy the full width on smaller screens */
   }

   .right-side {
      padding: 3vh;
      height: max-content;
      border-radius: 3vh;
      background-color: #fff;
      /* margin-top: 20px; */
      width: 100%; /* Occupy the full width on smaller screens */
   }
}

@media (max-width: 425px) {
   .main {
      height: 100%;
      /* padding-top: 30vh; */
      /* margin-top:5vh; */
      grid-template-columns: 1fr;
      width: 100%;
   }


   .wrapper {
      margin-top: 0vh;
      padding: 20px;
   }

   body {
      padding: 3vh;
   }
   /* ... other responsive styles ... */
}
         
      </style>
      <script type='text/javascript' src=''></script>
      <script type='text/javascript' src='https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js'></script>
      <script type='text/javascript' src='https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha1/js/bootstrap.min.js'></script>
   </head>
   <body oncontextmenu='return false' class='snippet-body'>
      
      <div class="main">
         <div class="left-side">
            <h2>Checkout</h2>
            <div class="border rounded .ship p-2 my-3 w-100">
               <b>Shipping Address</b>
               <div class="col-md-12 py-3">
                  <div class="d-flex flex-column align-items start Shipping_Address"></div>
                  
               </div>
            </div>
            <div class="d-flex align-items-center justify-content-between pb-4 pl-3" style="font-size: 2vh;">
               <div class="d-flex justify-content-center mt-3">
                  <iconify-icon icon="la:shipping-fast"  style="font-size: 3vh;margin-right: 3vh;"></iconify-icon>
                 <p>FREE STANDARD DELIVERY APPLICABLE</p>
               </div>
               <div class="d-flex">
               <p><del>₹99</del></p>
                 <p class="ml-3">₹0</p>
               </div>
            </div>
            <p><a href="/" style="text-decoration: none;color: #000;">&#8592; Back</a></p>
         </div>
         <div class="right-side">
            <div class="wrapper pt-2">
               <h4>Summary</h4>
               <table class="table corner-round p-4 table-striped table-responsive" style="border: none; border-radius: 2vh; overflow: hidden;">
                  <thead>
                      <tr style="display: none;">
                           <th scope="col">Name</th>
                          <th scope="col">Name</th>
                          <th scope="col">Price</th>
                          <th scope="col">Quantity</th>
                          <!-- <th scope="col">Price (₹)</th> -->
                      </tr>
                  </thead>
                  <tbody class="allItems" style="background-color: rgba(255, 255, 255, 0.1);">
                      <!-- ... (your table body content) ... -->
                  </tbody>
              </table>
             <div class="d-flex discount-field justify-content-between align-items-center mt-2 pb-4">
                <div class="text-muted discount-input">
                    <input type="text" class="form-control" id="couponInput" placeholder="Enter Coupon" value="<%= content.code %>">
                </div>
                <div class="ml-1">
                    <button class="btn btn-dark btn-apply-coupon coupon_Button">Apply</button>
                </div>
                <div class="ml-1">
                   <button class="btn btn-dark btn-apply-coupon coupon_remove_Button" style="display: none;">Remove</button>
                </div>
            </div>
                <div class="table-responsive mrp" style="height: auto;padding: 0;">
                   <table class="table table-borderless" >
                      <thead>
                         <tr class="text-uppercase text-muted">
                            <th scope="col"></th>
                            <th scope="col" class="text-right" style="font-size: 2vh;">Total</th>
                         </tr>
                      </thead>
                      <tbody style="padding: 0;"> 
                         <tr>
                            <td scope="row"></td>
                            <td class="text-right total" style="font-size: 3vh;"><b>&#8377;</b></td>
                         </tr>
                      </tbody>
                   </table>
                </div>
                <div class="d-flex align-items-end justify-content-end mb-5">
                   <button class="btn btn-success proceedToPay" style="font-size: 1.3rem;">Proceed To Pay</button>
                  </div>
                  <div class="d-flex flex-column mt-1">
                     <p>We Accept All Payment Methods :</p>
                     <img src="/assets/payments.PNG" style="height: 5vh;width: 15vw;"/>
                  </div>
             </div>
         </div>
      </div>
      <div id="alertContainer"></div>
      <style>
         .alert {
            position: fixed;
            top: 1rem;
            right: 1rem;
            z-index: 1;
            padding: 0.75rem 1.25rem;
            margin-bottom: 1rem;
            border: 1px solid transparent;
            border-radius: 0.25rem;
            transition: 0.3s ease-in-out;
         }

         .alert.success {
            color: #155724;
            background-color: #d4edda;
            border-color: #c3e6cb;
         }
         .alert.danger {
            color: #721c24;
            background-color: #f8d7da;
            border-color: #f5c6cb;
         }
         </style>
         <script>
         function showAlert(message, type) {
            const alertContainer = document.getElementById("alertContainer");
         
            // Create alert element
            const alert = document.createElement("div");
            alert.className = `alert ${type}`;
            alert.innerHTML = `${message}<span class="close" onclick="closeAlert(this)">×</span>`;
         
            // Append alert to container
            alertContainer.appendChild(alert);
         
            // Set timeout to remove the alert after 5 seconds
            setTimeout(() => {
               closeAlert(alert.querySelector(".close"));
            }, 4000);
         }
         
         function closeAlert(closeButton) {
            const alert = closeButton.parentElement;
            alert.style.display = "none";
         }
         </script>
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
      <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
      <script>
         let Total = 0;
            document.querySelector('.coupon_Button').addEventListener('click', async (req, res) => {
               let code = document.querySelector('#couponInput').value;
               if (code !== ''){
                  await axios.get(`/coupons/${code}`)
                  .then(response => response.data)
                  .then(coupon => {
                     showAlert("coupon loaded successfully","success")
                     // Assuming Total is a variable representing the total amount
                     document.querySelector('.total').innerHTML = `<b>&#8377;<del>${Total}/-</del></b> <br><span class="text-muted" style="font-size:1rem;">${((coupon.discount))}% OFF APPLIED</span> <b> <br><span style="font-size:3vh;"> &#8377;${Math.floor(Total - Total * ((coupon.discount) / 100))}/</span></b>-<br>`;
                     document.querySelector('.coupon_remove_Button').style.display = "block"
                     document.querySelector('.coupon_Button').style.display = "none"
                  })
                  .catch(err => showAlert("coupon is invalid", "danger"))
               }
            })
            document.querySelector('.coupon_remove_Button').addEventListener('click', async (req, res) => {
               showAlert("coupon removed successfully","success")
               document.querySelector('#couponInput').value = ''
               document.querySelector('.total').innerHTML = `<b>&#8377;${Total}</b>`;
               document.querySelector('.coupon_remove_Button').style.display = "none"
               document.querySelector('.coupon_Button').style.display = "block"
            })
            function dataCell (content) {
               var item = document.createElement('td')
               item.textContent = content;
               return item
            }
            function addTableRow(name, price, quantity) {
               // Get the table body
               var tableBody = document.querySelector('.allItems')

               var row = document.createElement('tr')
               row.append(dataCell(name))
               row.append(dataCell(price))
               row.append(dataCell(quantity))
               // row.append(dataCell((price*quantity)))

               tableBody.append(row)
            }
         document.addEventListener('DOMContentLoaded', async () => {
            await axios.get('/getprofile')
            .then(response => response.data.userProfile)
            .then(profile => {
            // name: newUser.name,
            // email: newUser.email,
            // phone: newUser.phone,
            // purchasedProducts: newUser.purchasedProducts
               profile.cart.forEach(async cartItem => {
                  await axios.get(`/api/products/${cartItem.itemId}`)
                    .then(response => response.data)
                    .then(productDetails => {
                     addTableRow(productDetails.name, productDetails.offeredPrice,cartItem.quantity)
                     Total += productDetails.offeredPrice*cartItem.quantity;
                     document.querySelector('.total').innerHTML = `<b>&#8377;${Total}</b>`;
                    })
                    .catch(err => {
                     showAlert("Error Fetching from cart","danger")
                    })
               })
               document.querySelector('.Shipping_Address').innerHTML = `
               <p type="text" class="text-justify mb-3">Your Email : ${profile.email || ""}</p>
                  <div class="labels">
                     <label for="name"">User Name</label>
                     <input type="test" id="name" class="text-justify" placeholder="Enter Name" value="${profile.name || ""}">
                  </div>
                  <div class="labels">
                     <label for="phone">contact number</label>
                     <input type="test" id="phone" class="text-justify" placeholder="Enter Phone number" value="${profile.phone || ""}">
                  </div>
                 <div class="labels">
                     <label for="pincode">pincode</label>
                     <input type="text" id="pincode" class="text-justify" placeholder="Enter pincode" value="${profile.pincode || ""}">
                  </div>
                  <div class="labels">
                     <label for="address">address</label>
                     <input type="text" id="address" class="text-justify" placeholder="Enter address" value="${profile.address || ""}">
                  </div>
                  <div class="labels">
                     <label for="city">city</label>
                     <input type="text" id="city" class="text-justify" placeholder="Enter City" value="${profile.city || ""}">
                  </div>
                  <div class="labels">
                     <label for="locality">locality</label>
                  <input type="text" id="locality" class="text-justify" placeholder="Enter Locality" value="${profile.locality || ""}">
                  </div>
                  <div class="labels">
                     <label for="landmark">landmark</label>
                  <input type="test" id="landmark" class="text-justify" placeholder="Enter Landmark" value="${profile.landmark || ""}">
                  </div>
                  
               `;

                  // // Create a new Date object
                  // var today = new Date();
                  // var year = today.getFullYear();
                  // var month = today.getMonth() + 1;
                  // var day = today.getDate();
                  // var formattedDate = year + '/' + (month < 10 ? '0' + month : month) + '/' + (day < 10 ? '0' + day : day);

                  // document.querySelector('.date').textContent = formattedDate;
            })
            .then(async () => {
               const code = document.querySelector('#couponInput').value
               if (code !== ''){
                  await axios.get(`/coupons/${code}`)
                  .then(response => response.data)
                  .then(coupon => {
                     showAlert("coupon loaded successfully","success")
                     // Assuming Total is a variable representing the total amount
                     document.querySelector('.total').innerHTML = `<b>&#8377;<del>${Total}/-</del></b> <br><span class="text-muted" style="font-size:1rem;">${((coupon.discount))}% OFF APPLIED</span> <b> <br><span style="font-size:3vh;"> &#8377;${Math.floor(Total - Total * ((coupon.discount) / 100))}/</span></b>-<br>`;
                     document.querySelector('.coupon_remove_Button').style.display = "block"
                     document.querySelector('.coupon_Button').style.display = "none"
                  })
                  .catch( err => showAlert("coupon is invalid", "danger"))
               }
            })
            .then(() => {
               const flow = '<%= content.flow %>'
               if (flow === 'true') {
                  const selectElement = document.querySelector('.proceedToPay');
                  const selectEvent = new Event('click');
                  selectElement.dispatchEvent(selectEvent);
               }
            })
            .catch(err => {
               console.log("could not fetch profile\n"+ err)
               showAlert("Error Fetching profile","danger")
            })
         })

         document.addEventListener('DOMContentLoaded', function(){
            document.querySelector('.proceedToPay').addEventListener('click',function(e){
               e.preventDefault();
               const name = document.getElementById("name").value;
               const phone = document.getElementById("phone").value;
               const pincode = document.getElementById("pincode").value;
               const address = document.getElementById("address").value;
               const city = document.getElementById("city").value;
               const locality = document.getElementById("locality").value;
               const landmark = document.getElementById("landmark").value;
               if (name && phone && pincode && address && city && locality && landmark) {
                  let code = document.querySelector('#couponInput').value;

                  var formData = {
                     couponCode: code,
                     name,
                     description:"Payment for White Wolf cart",
                     phone,
                     pincode,
                     address,
                     city,
                     locality,
                     landmark
                  }

                  $.ajax({
                     url:"/processPayment",
                     type:"POST",
                     data: formData,
                     success:function(res){
                        if(res.success){
                           var options = {
                              "key": ""+res.key_id+"",
                              "amount": ""+res.amount+"",
                              "currency": "INR",
                              "name": ""+res.product_name+"",
                              "description": ""+res.description+"",
                              "image": "https://dummyimage.com/600x400/000/fff",
                              "order_id": ""+res.order_id+"",
                              "handler": function (response){
                                 axios.post('/save/order',{ data : response, couponCode: code})
                                 .then(res => {
                                 window.location.href = '/success'; 
                                 })
                                 .catch(err => console.log(err))
                              },
                              "prefill": {
                                 "contact":""+res.contact+"",
                                 "name": ""+res.name+"",
                                 "email": ""+res.email+""
                              },
                              "notes" : {
                                 "description":""+res.description+""
                              },
                              "theme": {
                                 "color": "#2300a3"
                              }
                           };
                           var razorpayObject = new Razorpay(options);
                           razorpayObject.on('payment.failed', function (response){
                                 showAlert("show Alert")
                           });
                           razorpayObject.open();
                        }
                        else{
                           alert(res.msg);
                        }
                     },
                     error: function (xhr, textStatus, errorThrown) {
                        if (xhr.status === 404) {
                              window.location.href = '/login';
                        } else if (xhr.status === 400) {
                              showAlert("rzarpay refused to comply","danger")
                        } else {
                              showAlert("Something went wrong with payment", "danger");
                        }
                     }
                  })
               } else {

                  showAlert("please complete address details","danger")
               }
            });
         });
      </script>
   </body>
</html>