<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <title>Dashboard</title>
    <link rel="stylesheet" href="/css/adminstyle.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://code.iconify.design/iconify-icon/1.0.7/iconify-icon.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
    <style>

        @media only screen and (max-width: 768px) {
            #productsSection {
                padding: 2rem;
            }
        }

        .form-container {
            display: flex;
            justify-content: space-between;
        }

        .form-container > div {
            width: 48%; 
        }

        output{
            display: flex;
            flex-direction: row;
            width: 30vw;
        }

        output img{
            height: 15vh;
            margin: 0.5rem;
            border-radius: 1rem;
            width:auto;
        }


        .form-container input,
        .form-container textarea,
        .form-container select {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            box-sizing: border-box;
            border: 1px solid lightgrey;
            border-radius: 1rem;
        }

        .form-container button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
    </style>
</style>
</head>

<body>
    <div class="container">
        <nav>
            <ul>
                <li><a href="#" class="logo">
                    <img src="assets/logo.PNG" alt="">
                    <span class="nav-item admin">Admin Panel</span>
                </a></li>
                <li><a href="#" onclick="showDashboard()" id="dashboardTab">
                    <i class="fas fa-id-card"></i>
                    <span class="nav-item">Dashboard</span>
                </a></li>
                <li><a href="#" onclick="showAnalytics()" id="analyticsTab">
                    <i class="fas fa-user"></i>
                    <span class="nav-item">Users</span>
                </a></li>
                <li><a href="#" onclick="showOrders()" id="ordersTab">
                    <i class="fas fa-store"></i>
                    <span class="nav-item">Orders</span>
                </a></li>
                <li><a href="#" onclick="showProducts()" id="productsTab">
                    <i class="fas fa-shopping-bag"></i>
                    <span class="nav-item">Add Products</span>
                </a></li>
                <!-- <li><a href="#" onclick="showCategories()" id="categoriesTab">
                    <i class="fas fa-chart-line"></i>
                    <span class="nav-item">Categories</span>
                </a></li> -->
                <li><a href="#" onclick="showInventory()" id="inventoryTab">
                    <i class="fas fa-warehouse"></i>
                    <span class="nav-item">Inventory</span>
                </a></li>
                <li><a href="#" onclick="showPayments()" id="paymentsTab">
                    <i class="fas fa-wallet"></i>
                    <span class="nav-item">Wallet</span>
                </a></li>
                <li><a href="#" onclick="showCoupon()" id="couponTab">
                    <i class="fas fa-gift"></i>
                    <span class="nav-item">Coupons</span>
                </a></li>
                <li><a href="#" onclick="showSettings()" id="settingsTab">
                    <i class="fas fa-sign-out-alt"></i>
                    <span class="nav-item">Log Out</span>
                </a></li>
            </ul>
        </nav>        
        <section class="main" id="dashboardSection" style="display: none;">
            <div class="main-top">
                <h1>Summary</h1>
            </div>
            <div class="main-skills">
                <div class="card">
                    <iconify-icon class="icon" icon="emojione:money-bag"></iconify-icon>
                    <h2>Rs 11,200</h2>
                    <h4>Today Sales</h4>
                </div>
                <div class="card">
                    <iconify-icon class="icon" icon="emojione-v1:shopping-bags"></iconify-icon>
                    <h2>65</h2>
                    <h4>Today Orders</h4>
                </div>
                <div class="card">
                    <iconify-icon class="icon" icon="openmoji:timer"></iconify-icon>
                    <h2>20</h2>
                    <h4>Pending Orders</h4>
                </div>
                <div class="card">
                    <iconify-icon class="icon" icon="emojione:shopping-cart"></iconify-icon>
                    <h2>Rs 1,43,000</h2>
                    <h4>Monthly Sales</h4>
                </div>
            </div>

            <section class="main-course">
                <h1>Analytics</h1>
                <div class="course-box">
                    <div>
                        <canvas id="myChart" class="chart"></canvas>
                    </div>
                    <div>
                        <h2>Top Selling Products</h2>
                        <table style="width: 100%; border-collapse: collapse; margin-top: 20px;">
                          <tbody>
                            
                            <tr>
                              <td style="border: 1px solid #ddd; padding: 8px; text-align: center;"><img src="images/Product1.jpg" alt="Product 1" style="max-width: 50px; max-height: 50px;"></td>
                              <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">Product 1 Name</td>
                              <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">1000 Units Sold</td>
                            </tr>

                            
                            <tr>
                              <td style="border: 1px solid #ddd; padding: 8px; text-align: center;"><img src="images/Product2.jpg" alt="Product 2" style="max-width: 50px; max-height: 50px;"></td>
                              <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">Product 2 Name</td>
                              <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">800 Units Sold</td>
                            </tr>

                            
                            <tr>
                              <td style="border: 1px solid #ddd; padding: 8px; text-align: center;"><img src="images/Product3.jpg" alt="Product 3" style="max-width: 50px; max-height: 50px;"></td>
                              <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">Product 3 Name</td>
                              <td style="border: 1px solid #ddd; padding: 8px; text-align: left;">700 Units Sold</td>
                            </tr>

                          </tbody>
                        </table>
                      </div>
            </section>
        </section>

        <!-- shows all the users -->
        <section class="main" id="analyticsSection" style="display: none;" >
            <section class="main-orders">
                <h1>User Analytics</h1>
                <div class="user-container">
                    <table class="user-table">
                        <thead>
                            <tr>
                                <th>User Name</th>
                                <th>email</th>
                                <th>Phone Number</th>
                                <th>Pin Code</th>
                                <th>Account Created</th>
                                <!-- <th>Action</th> -->
                                <!-- <td>
                                    <button onclick="toggleUserBlock('John Doe')" class="block-button">Block</button>
                                </td> -->
                            </tr>
                        </thead>
                        <tbody id="userTableBody">
                        </tbody>
                    </table>
                </div>
            </section>
            <script>

                document.querySelector('#analyticsTab').addEventListener('click',async () => {
                    function createTableCell(content) {
                        let cell = document.createElement('td')
                        cell.textContent = content;
                        return cell;
                    }
                    document.querySelector('#userTableBody').innerHTML = ''
                    await axios.get('/api/admin/getAllUsers')
                    .then(response => response.data)
                    .then(users => {
                        users.forEach(user => {
                            let row = document.createElement('tr')
                            row.append(createTableCell(user.name))
                            row.append(createTableCell(user.email))
                            row.append(createTableCell(user.phone))
                            row.append(createTableCell(user.pincode))

                            const dateTime = new Date(user.joinDate);

                            const formattedDateTime = dateTime.toLocaleString();

                            row.append(createTableCell(formattedDateTime))
                            document.querySelector('#userTableBody').append(row)
                        })
                    })
                    .catch(err => console.log("oops, an error occured " + err))
                })
            </script>
        </section>   

        <!-- shows all orders : implement a status update -->
        <section class="main" id="ordersSection" style="display:none;">
            <section class="main-orders">
                <h1>Orders</h1>
                <div class="orders-container">
                    <ul class="list">
                        <li class="active" onclick="showOrderTab('allOrders')" data-tab="allOrders">All Orders</li>
                        <li onclick="showOrderTab('pendingOrders')" data-tab="pendingOrders">Pending Orders</li>
                        <li onclick="showOrderTab('completedOrders')" data-tab="completedOrders">Completed Orders</li>
                    </ul>
                    <div>
                        <div class="order-table" id="allOrdersTab">
                            <table class="table table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th style="width: 15%;">Order Id</th>
                                        <th style="width: 15%;">Email</th>
                                        <th style="width: 20%;">Products</th>
                                        <th style="width: 15%;">Price</th>
                                        <th style="width: 15%;">Date</th>
                                        <th style="width: 20%;">Status</th>
                                    </tr>
                                </thead>
                                <tbody id="allOrdersBody"></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </section>
            <script>
                document.querySelector('#ordersTab').addEventListener('click', async () => {
                    function createTableCell(content) {
                        let cell = document.createElement('td')
                        cell.textContent = content;
                        return cell;
                    }
                    document.querySelector('#allOrdersBody').innerHTML = ''
                    await axios.get('/api/admin/getAllOrders')
                        .then(response => response.data)
                        .then(orders => {
                            orders.forEach(async order => {
                                let row = document.createElement('tr')
                                row.append(createTableCell(order._id))
                                row.append(createTableCell(order.email))

                                let names = "";

                                await Promise.all(order.products.map(async product => {
                                    try {
                                        const response = await axios.get(`/api/products/${product.itemId}`);
                                        names += ` ${response.data.name}`;
                                    } catch (err) {
                                        console.log("error fetching products", err);
                                    }
                                }));

                                row.append(createTableCell(names)) // Correct variable name here
                                row.append(createTableCell(order.totalPayment))

                                const dateTime = new Date(order.Date);

                                // Get date and time
                                const formattedDateTime = dateTime.toLocaleString();

                                row.append(createTableCell(formattedDateTime))

                                row.append(createTableCell(order.status))

                                document.querySelector('#allOrdersBody').append(row);
                            })
                        })
                        .catch(err => console.log("server refused on order data"))
                })
            </script>
        </section>

        <!-- complete -->
        <section class="main" id="productsSection" style="display: none;">
            <section class="main-orders">
            <h1 style="margin-bottom: 0.3rem;">Add Product</h1>
                <div class="form-container">
                    <div>
                        <label for="productName">Product Name:</label>
                        <input type="text" id="productName" name="productName" required>

                        <label for="productDescription">Product Description:</label>
                        <textarea id="productDescription" name="productDescription" rows="4" required></textarea>

                        <label for="originalPrice">Original Price (₹):</label>
                        <input type="number" id="originalPrice" name="originalPrice" required>

                        <label for="offeredPrice">Offered Price (₹)<span style="color: #999;">(Amount to be displayed to User)</span>:</label>
                        <input type="number" id="offeredPrice" name="offeredPrice" required>

                        <label for="category">Category:</label>

                        <select id="category" name="category" required>
                            <option value="Face Care">Face Care</option>
                            <option value="Hair Care">Hair Care</option>
                            <option value="Body Care">Body Care</option>
                            <option value="Beard Care">Beard Care</option>
                        </select>

                         <button onclick="addProduct()" style="margin-top: 1rem;">Publish Product</button>

                    </div>

                    <div>
                        <label for="stock">Stock:</label>
                        <input type="number" id="stock" name="stock" required>
                        
                        <label for="Image1">First Image (250x250):</label>
                        <input type="file" id="Image1" name="Image1" accept="image/*" required onchange="previewImage('Image1')" style="border: none; padding: 0.5rem; background-color: #f0f0f0;">
                        <img id="Image1Preview" alt="Preview" style="max-width: 50%; height: 15vh; margin-top: 0rem; margin-bottom: 1rem;border-radius: 1rem;">
                        
                        <label for="Image2">Second Image (250x250):</label>
                        <input type="file" id="Image2" name="Image2" accept="image/*" required onchange="previewImage('Image2')" style="border: none; padding: 0.5rem; background-color: #f0f0f0;"> 
                        <img id="Image2Preview" alt="Preview" style="max-width: 50%; height: 15vh; margin-top: 0rem; margin-bottom: 1rem;border-radius: 1rem;">

                        <label for="Image3">Third Image (250x250):</label>
                        <input type="file" id="Image3" name="Image3" accept="image/*" required onchange="previewImage('Image3')" style="border: none; padding: 0.5rem; background-color: #f0f0f0;">
                        <img id="Image3Preview" alt="Preview" style="max-width: 50%; height: 15vh; margin-top: 0rem; margin-bottom: 1rem;border-radius: 1rem;">

                    </div>
                </div>
            </section>
            <script>    
                function previewImage(inputId) {
                    const input = document.getElementById(inputId);
                    const preview = document.getElementById(`${inputId}Preview`);

                    if (input.files && input.files[0]) {
                        const reader = new FileReader();

                        reader.onload = function (e) {
                            preview.src = e.target.result;
                        };

                        reader.readAsDataURL(input.files[0]);
                    }
                }
                function previewImages(inputId) {
                    const input = document.getElementById(inputId);
                    const previewContainer = document.getElementById(`${inputId}Preview`);
                    previewContainer.innerHTML = '';

                    if (input.files && input.files.length > 0 && input.files.length <= 3) {
                        Array.from(input.files).forEach((file, index) => {
                            const reader = new FileReader();
                            reader.onload = function (e) {
                                const img = document.createElement('img');
                                img.src = e.target.result;
                                img.className = 'image-preview-small';
                                previewContainer.appendChild(img);
                            };
                            reader.readAsDataURL(file);
                        });
                    } else {
                        alert("Please upload between 1 and 3 additional images.");
                        input.value = ''; 
                    }
                }
                function addProduct() {
                    const name = document.getElementById('productName').value;
                    const description = document.getElementById('productDescription').value;
                    const originalPrice = document.getElementById('originalPrice').value;
                    const offeredPrice = document.getElementById('offeredPrice').value;
                    const category = document.getElementById('category').value;
                    const stock = document.getElementById('stock').value;
                    const Image1 = document.getElementById('Image1').files[0];
                    const Image2 = document.getElementById('Image2').files[0];
                    const Image3 = document.getElementById('Image3').files[0];

                    if (
                        name &&
                        description &&
                        originalPrice &&
                        offeredPrice &&
                        category &&
                        stock &&
                        Image1
                    ) {
                        let formData = new FormData();
                        
                        formData.append('name', name);
                        formData.append('description', description);
                        formData.append('originalPrice', originalPrice);
                        formData.append('offeredPrice', offeredPrice);
                        formData.append('category', category);
                        formData.append('stock', stock);
                        formData.append('files', Image1);
                        formData.append('files', Image2);
                        formData.append('files', Image3);

                        axios
                            .post('/api/products', formData)
                            .then((response) => {
                                alert('Product added successfully:', response.data);
                            })
                            .catch((error) => {
                                console.error('Error adding product:', error);
                            });
                    } else {
                        alert('Please fill in all the details before adding the product.');
                    }
                }
            </script>
        </section>

        <!-- deprecated -->
        <!-- <section class="main" id="categoriesSection"style="display: none;">
            <section class="main-orders">
                <h1>Add/View Categories</h1>
                <div class="category-container">
                    <div class="category-input">
                        <input type="text" id="categoryName" placeholder="Category Name">
                        <div id="currentDateTime" style="display: none;"></div>
                        <button onclick="addCategory()" class="add-category">Add Category</button>
                    </div>

                    <table class="category-table">
                        <thead>
                            <tr>
                                <th>Serial Number</th>
                                <th>Category Name</th>
                                <th>Date of Adding</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody id="categoryTableBody">

                            <tr>
                                <td>1</td>
                                <td>Electronics</td>
                                <td>2023-11-28</td>
                                <td>
                                    <button onclick="editCategory(this.parentNode.parentNode)">Edit</button>
                                    <button onclick="deleteCategory(this.parentNode.parentNode)">Delete</button>
                                </td>
                            </tr>
                            <tr>
                                <td>2</td>
                                <td>Clothing</td>
                                <td>2023-11-27</td>
                                <td>
                                    <button onclick="editCategory(this.parentNode.parentNode)">Edit</button>
                                    <button onclick="deleteCategory(this.parentNode.parentNode)">Delete</button>
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </div>
            </section>
        </section> -->

        <!-- style for inventory Section -->
        <style>
            .item_edit_modal {
                display: none;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.5);
                justify-content: center;
                align-items: center;
                z-index: 1; /* Set z-index to appear above other elements */
            }
        
            .modal-content {
                background-color: #fff;
                padding: 20px;
                border-radius: 8px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                max-width: 400px;
                width: 100%;
                text-align: center;
                position: relative;
            }        
        </style>
        <!-- implement a product update -->
        <section class="main" id="inventorySection" style="display: none;">
            <section class="main-orders">
                <h1>Products Grid</h1>
                <div class="product-grid" id="productGrid"></div>
                
                <div id="editModal" class="item_edit_modal" style="display: none;">
                    <div class="modal-content">
                        <span class="close" onclick="closeEditModal()">&times;</span>
                        <h2>Edit Product</h2>
                        <label for="newStock">New Stock:</label>
                        <input type="number" id="newStock" name="newStock" required>

                        <label for="newOfferedPrice">New Offered Price:</label>
                        <input type="number" id="newOfferedPrice" name="newOfferedPrice" required>

                        <label for="newOriginalPrice">New Original Price</label>
                        <input type="number" id="newOriginalPrice" name="newOriginalPrice" required>
                        <button onclick="updateData()">Save Changes</button>
                    </div>
                </div>
            </section>
            <script>
                async function openEditModal(itemId) {
                    document.querySelector(".item_edit_modal").style.display = 'flex';
                }

                function closeEditModal() {
                    document.querySelector(".item_edit_modal").style.display = 'none';
                }

                async function deleteProduct(itemId) {
                    await axios.delete(`/api/products/${itemId}`)
                    .then(response => {
                        document.querySelector("."+itemId).innerHTML = ''
                        alert(response.data.message)
                    })
                    .catch(err => alert("some error occured when removing the product\n" + err))
                }
                
                async function loadAllProducts () {
                    document.querySelector('.product-grid').innerHTML = ''
                    await axios.get('/api/products')
                    .then(response => response.data)
                    .then(products => {
                        let mainGrid = document.querySelector('.product-grid')
                        products.forEach(product => {
                            let productDiv = document.createElement('div')
                            productDiv.innerHTML = `
                            <div class="product-card ${product.itemId}">
                                <img class="product-image" src="${product.imageLink[0]}" alt="Product 1">
                                <div class="product-name">${product.name}</div>
                                <div class="product-stock">Stock Left : ${product.stock}</div>
                                <div class="product-stock">Offered Price : ${product.offeredPrice}</div>
                                <div class="product-stock">Original Price : ${product.originalPrice}</div>
                                <div class="product-actions">
                                    <button onclick="openEditModal('${product.itemId}')">Edit</button>
                                    <button onclick="deleteProduct('${product.itemId}')">Delete</button>
                                </div>
                            </div>
                            `
                            mainGrid.append(productDiv)
                        })

                    })
                    .catch( err => console.log("Error fetching products data", err))
                }
                document.querySelector('#inventoryTab').addEventListener('click', async () => {
                    loadAllProducts();
                });
            </script>
        </section>

        <section class="main" id="paymentsSection" style="display: none;">
            <section class="main-orders">
                <h1>My Wallet</h1>
                <div class="wallet">
                    <div class="wallet-top" style="display:flex;justify-content: space-between;">
                        <div class="card">
                            <iconify-icon class="icon" icon="noto:money-bag"></iconify-icon>
                            <h4>Rs 50,000</h4>
                            <h5>Total Income</h5>
                        </div>
                        <div class="card">
                            <iconify-icon class="icon" icon="meteocons:clear-day-fill"></iconify-icon>
                            <h4>Rs 50,000</h4>
                            <h5>Today's Income</h5>
                        </div>
                        <div class="card">
                            <iconify-icon class="icon" icon="noto-v1:shopping-bags"></iconify-icon>
                            <h4>Rs 299</h4>
                            <h5>Average Order Value</h5>
                        </div>

                    </div>
                    <br>
                    <div class="mt-4">
                        <h3>Weekly Summary</h3>
                        
                    </div>

                    <div class="wallet-bottom">
                        <h3>Recent Transactions</h3>

                        <div style="display: flex;">
                            <div class="mb-3">
                                <button class="btn" id="btnToday">Today</button>
                                <button class="btn" id="btnLast7Days">Last 7 Days</button>
                                <button class="btn" id="btnLast30Days">Last 30 Days</button>
                            </div>

                            <div>
                                <input type="text" class="form-control" id="datePicker">
                                <button class="btn-show" id="btnShow">Show</button>
                            </div>
                        </div>

                        <table class="wallet-table">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Order ID</th>
                                    <th scope="col">User Name</th>
                                    <th scope="col">Pincode</th>
                                    <th scope="col">Product Name</th>
                                    <th scope="col">Amount Received</th>
                                </tr>
                            </thead>
                            <tbody>
                                
                                <tr>
                                    <th scope="row">1</th>
                                    <td>ORD123456</td>
                                    <td>John Doe</td>
                                    <td>123456</td>
                                    <td>Product XYZ</td>
                                    <td>$50.00</td>
                                </tr>
                                <tr>
                                    <th scope="row">1</th>
                                    <td>ORD123456</td>
                                    <td>John Doe</td>
                                    <td>123456</td>
                                    <td>Product XYZ</td>
                                    <td>$50.00</td>
                                </tr>
                                <tr>
                                    <th scope="row">1</th>
                                    <td>ORD123456</td>
                                    <td>John Doe</td>
                                    <td>123456</td>
                                    <td>Product XYZ</td>
                                    <td>$50.00</td>
                                </tr>
                                <tr>
                                    <th scope="row">1</th>
                                    <td>ORD123456</td>
                                    <td>John Doe</td>
                                    <td>123456</td>
                                    <td>Product XYZ</td>
                                    <td>$50.00</td>
                                </tr>

                                
                            </tbody>
                        </table>
                    </div>
                </div>
            </section>
        </section>

        <!-- done -->
        <section class="main" id="coupon" >
            <section class="main-orders">
                <h1>Add/Delete Coupons</h1>
    
               <div class="coupon-container">
                <form id="couponForm">
                    <table>
                        <tr>
                            <th>Coupon Code</th>
                            <th>Discount Percentage</th>
                            <th>Validity Start</th>
                            <th>Validity End</th>
                            <th>Action</th>
                        </tr>
                        <tr>
                            <td>
                                <input type="text" id="couponCode" name="couponCode" placeholder="Enter coupon Code" required>
                            </td>
                            <td>
                                <input type="number" id="discountPercentage" name="discountPercentage" placeholder="Enter discount percentage"
                                    required min="1" max="100" style="width: 15vw;">
                            </td>
                            <td>
                                <input type="datetime-local" id="validityStart" name="validityStart" placeholder="Select validity start" required>
                            </td>
                            <td>
                                <input type="datetime-local" id="validityEnd" name="validityEnd" placeholder="Select validity end" required>
                            </td>
                            <td>
                                <button type="button" onclick="addCoupon()">Add Coupon</button>
                            </td>
                        </tr>
                    </table>
                </form>
    
                <!-- Active Coupons List -->
                <div style="overflow: auto;height: 60vh;">
                    <h2 style="margin-top: 2rem;">Active Coupons</h2>
                    <table id="couponList">
                        <thead>
                            <tr>
                            <th>Coupon Name</th>
                            <th>Discount Percentage</th>
                            <th>Validity Start</th>
                            <th>Validity End</th>
                            <th>Action</th>
                            </tr>
                        </thead>
                        <tbody class="couponsTableBody">

                        </tbody>
                        <!-- Coupon items go here -->
                    </table>
                </div>
            </div>
            <script>
                async function addCoupon() {
                    const code = document.querySelector('#couponCode').value;
                    const discount = document.querySelector('#discountPercentage').value
                    const validityStart = document.querySelector('#validityStart').value
                    const validityEnds = document.querySelector('#validityEnd').value

                    if (code && discount && validityStart && validityEnds) {
                        await axios.post('/coupons',{code, discount, validityStart, validityEnds})
                        .then(response => {
                            console.log(response)
                            let row = document.createElement('tr')
                            row.classList.add(`code_${coupon.code}`)
                            row.innerHTML = `
                            <tr>
                                <td>${code}</td>
                                <td>${discount}%</td>
                                <td>${validityStart}</td>
                                <td>${validityEnds}</td>
                                <td><button onclick="deleteCoupon('${code}')">Delete</button></th>
                            </tr>
                            `
                            document.querySelector('.couponsTableBody').append(row)

                            document.querySelector('#couponCode').value = ''
                            document.querySelector('#discountPercentage').value = ''
                            document.querySelector('#validityStart').value = ''
                            document.querySelector('#validityEnd').value = ''

                        })
                        .catch(err => console.log('an error occured creating a coupon' + err))
                    }
                }
                async function deleteCoupon(code) {
                    await axios.delete(`/coupons/${code}`)
                    .then(response => {
                        console.log(response.data.message)
                        document.querySelector(`.code_${code}`).innerHTML = ''
                    })
                    .catch(err => console.log("failed to delete coupon " + err))
                }
                document.querySelector('#couponTab').addEventListener('click', async () => {
                    await axios.get('/coupons')
                    .then(response => response.data)
                    .then(coupons => {
                        let body = document.querySelector('.couponsTableBody')
                        body.innerHTML = ''
                        coupons.forEach(coupon => {
                            let row = document.createElement('tr')
                            row.classList.add(`code_${coupon.code}`)
                            row.innerHTML = `
                            <tr>
                                <td>${coupon.code}</td>
                                <td>${coupon.discount}%</td>
                                <td>${coupon.validityStart}</td>
                                <td>${coupon.validityEnds}</td>
                                <td><button onclick="deleteCoupon('${coupon.code}')">Delete</button></th>
                            </tr>
                            `
                            body.append(row)        
                        })
                    })
                    .catch(err => console.log("an error occured while fetching the coupons"))
                })
            </script>
            </section>
        </section>
    
    </div>
    <script>
        function showDashboard() {
        showSection('dashboardSection');
        setActiveTab('dashboardTab');
    }

    function showAnalytics() {
        showSection('analyticsSection');
        setActiveTab('analyticsTab');
    }

    function showOrders() {
        showSection('ordersSection');
        setActiveTab('ordersTab');
    }

    function showProducts() {
        showSection('productsSection');
        setActiveTab('productsTab');
    }

    function showCategories() {
        showSection('categoriesSection');
        setActiveTab('categoriesTab');
    }

    function showInventory() {
        showSection('inventorySection');
        setActiveTab('inventoryTab');
    }

    function showPayments() {
        showSection('paymentsSection');
        setActiveTab('paymentsTab');
    }

    function showSettings() {
        showSection('settingsSection');
        setActiveTab('settingsTab');
    }

    function showLogout() {
        showSection('logoutSection');
        setActiveTab('logoutTab');
    }

    function showCoupon() {
        showSection('coupon');
        setActiveTab('couponTab');
    }

    function showSection(sectionId) {

            var sections = document.getElementsByClassName('main');
            for (var i = 0; i < sections.length; i++) {
                sections[i].style.display = 'none';
            }

            var selectedSection = document.getElementById(sectionId);
            if (selectedSection) {
                selectedSection.style.display = 'block';
            }
        }
    </script>

</body>

</html>